// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectForYp2.data;

#nullable disable

namespace ProjectForYp2.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectForYp2.Model.OrgTechType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OrgTechType");
                });

            modelBuilder.Entity("ProjectForYp2.Model.Requests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<int>("Id_OrgTechTypeId")
                        .HasColumnType("int");

                    b.Property<string>("OrgTechManufacture")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgTechModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgTechNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RepairParts")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatysId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdId")
                        .HasColumnType("int");

                    b.Property<int>("masterIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_OrgTechTypeId");

                    b.HasIndex("StatysId");

                    b.HasIndex("UserIdId");

                    b.HasIndex("masterIdId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ProjectForYp2.Model.Statys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Statys");
                });

            modelBuilder.Entity("ProjectForYp2.Model.Types", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("ProjectForYp2.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Phone")
                        .HasColumnType("decimal(11,0)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectForYp2.Model.Requests", b =>
                {
                    b.HasOne("ProjectForYp2.Model.OrgTechType", "Id_OrgTechType")
                        .WithMany()
                        .HasForeignKey("Id_OrgTechTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectForYp2.Model.Statys", "Statys")
                        .WithMany()
                        .HasForeignKey("StatysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectForYp2.Model.User", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectForYp2.Model.User", "masterId")
                        .WithMany()
                        .HasForeignKey("masterIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_OrgTechType");

                    b.Navigation("Statys");

                    b.Navigation("UserId");

                    b.Navigation("masterId");
                });

            modelBuilder.Entity("ProjectForYp2.Model.User", b =>
                {
                    b.HasOne("ProjectForYp2.Model.Types", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
